int main()
{

    long double min = -5;
    long double max = 5;
    long double Kp = 1.8;
    long double Ki = 0;
    long double Kd = 0;
    long double dt = 1;

    long double current_state = 0.0;

    PID pid(min, max, Kp, Ki, Kd, dt);

    bool not_close_enough = true;
    long double EPS = 0.00000001;

    int x = 0;

    try
    {
        pid.make_svg();

        while (not_close_enough)
        {

            current_state += pid.calculate(PID::setpoint, current_state);

            pid.plot(current_state, x);
            x++;

            if ((current_state < (PID::setpoint + EPS) && current_state > (PID::setpoint - EPS)) || x > 30000 * 8)
            {
                not_close_enough = false;
            }

            // if (x % 40 == 0)
            // {
            //     current_state += (static_cast<float>(rand() % 3) - 1.5);
            // }
        }

        pid.finish_svg(x, current_state);
    }
    catch (int fault)
    {
        if (fault == -1)
            std::cout << "Buta a kodod is te butus" << std::endl;
    }

    return 0;
}